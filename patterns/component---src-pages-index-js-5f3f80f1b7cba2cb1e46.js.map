{"version":3,"sources":["webpack:///./src/components/Controls/index.js","webpack:///./src/components/GameBoard/index.js","webpack:///./src/pages/index.js"],"names":["Controls","lessonsData","onControlsChange","React","level","day","lesson","onlyFalse","controls","setControls","levels","Object","keys","days","lessons","undefined","className","value","onChange","event","target","map","key","values","type","checked","GameBoard","comment","isGameEnd","step","isFlip","wrongIndexes","gameState","setGameState","prevIndexes","JSON","parse","localStorage","getItem","indexes","concat","setItem","stringify","nextStep","length","onClick","rus","en","e","preventDefault","stopPropagation","index","serial","IndexPage","currentLesson","setCurrentLesson","daysData","falseIndexes","filter","_","indexOf"],"mappings":"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","file":"component---src-pages-index-js-5f3f80f1b7cba2cb1e46.js","sourcesContent":["import * as React from \"react\"\nimport './controls.scss';\n\nconst Controls = ({ lessonsData, onControlsChange }) => {\n  const [controls, setControls] = React.useState({\n    level: 'null',\n    day: 'null',\n    lesson: 'null',\n    onlyFalse: false,\n  });\n\n  const setLevel = (level) => setControls(({ onlyFalse }) => ({ level, day: 'null', lesson: 'null', onlyFalse }));\n  const setDay = (day) => setControls((values) => ({ ...values, day, lesson: 'null' }));\n  const setLesson = (lesson) => setControls((values) => ({ ...values, lesson, }));\n  const setOnlyFalse = (onlyFalse) => setControls((values) => ({ ...values, onlyFalse }));\n\n  React.useEffect(() => {\n    const { level, day, lesson } = controls;\n    if (level === 'null' || day === 'null' || lesson === 'null') {\n      onControlsChange(null);\n      return;\n    }\n\n    onControlsChange(controls);\n  }, [controls]);\n\n  const levels = Object.keys(lessonsData);\n  const days = controls.level === 'null' ? [] : Object.keys(lessonsData[controls.level]);\n  const lessons = controls.day === 'null'\n    ? [] \n    : (lessonsData[controls.level] === undefined || lessonsData[controls.level][controls.day] === undefined)\n      ? []\n      : Object.keys(lessonsData[controls.level][controls.day]);\n\n  return (\n    <section className=\"controls\">\n      <div className=\"controls__field\">\n        <select value={controls.level} onChange={(event) => setLevel(event.target.value)}>\n          <option value='null'>null</option>\n          { levels.map((level) => <option key={level} value={level}>{level}</option>) }\n        </select>\n      </div>\n\n      <div className=\"controls__field\">\n        <select value={controls.day} onChange={(event) => setDay(event.target.value)}>\n          <option value='null'>null</option>\n          { days.map((day) => <option key={day} value={day}>{day}</option>) }\n        </select>\n      </div>\n\n      <div className=\"controls__field\">\n        <select value={controls.lesson} onChange={(event) => setLesson(event.target.value)}>\n          <option value='null'>null</option>\n          { lessons.map((lesson) => <option key={lesson} value={lesson}>{lesson}</option>) }\n        </select>\n      </div>\n\n      <div className=\"controls__field\">\n        <label className=\"controls__checkbox-label\">\n          only false\n          <input\n            type=\"checkbox\"\n            onChange={(value) => setOnlyFalse(value.target.checked)}\n            checked={controls.onlyFalse} />\n        </label>\n      </div>\n    </section>\n  )\n}\n\nexport default Controls;\n","import * as React from \"react\"\n\nimport './game-board.scss';\n\nconst GameBoard = ({ lesson, controls, comment }) => {\n  const [gameState, setGameState] = React.useState({\n    isGameEnd: false,\n    lesson,\n    step: 0,\n    isFlip: false,\n    wrongIndexes: [],\n  });\n\n  React.useEffect(() => {\n    setGameState({\n      lesson,\n      step: 0,\n      isFlip: false,\n      wrongIndexes: [],\n    })\n  }, [lesson]);\n\n  React.useEffect(() => {\n    if (gameState.isGameEnd) {\n      const prevIndexes = JSON.parse(localStorage.getItem(\n        `${controls.level}-${controls.day}-${controls.lesson}`,\n      ));\n\n      const indexes = controls.onlyFalse\n        ? (prevIndexes !== null ? prevIndexes.concat(gameState.wrongIndexes) : gameState.wrongIndexes)\n        : gameState.wrongIndexes;\n\n\n      localStorage.setItem(\n        `${controls.level}-${controls.day}-${controls.lesson}`,\n        JSON.stringify(indexes),\n      );\n    }\n\n  }, [gameState]);\n\n  const nextStep = () => {\n    if (gameState.step >= lesson.length - 1) {\n      setGameState((values) => ({\n        ...values,\n        isGameEnd: true,\n      }));\n\n      return;\n    }\n\n    setGameState((values) => ({\n      ...values,\n      isFlip: false,\n      step: values.step + 1,\n    }));\n  }\n\n  const clickRightButtonHandler = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    nextStep();\n  }\n\n  const clickWrongButtonHandler = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const index = lesson[gameState.step].serial\n\n    setGameState((values) => (\n      { ...values, wrongIndexes: [...values.wrongIndexes, index] }\n    ))\n\n    nextStep();\n  }\n\n  if (gameState.isGameEnd) {\n    return (\n      <section className=\"game-board\">\n        game over\n        <button\n          onClick={() => setGameState((values) => ({ ...values, isGameEnd: false, step: 0 }))}>repeat</button>\n      </section>\n    );\n  }\n\n  return (\n    <section className=\"game-board\">\n      <div className=\"game-board__info\">\n        {`${gameState.step + 1} / ${lesson.length}`}\n      </div>\n\n      <div className=\"game-board__card\" onClick={() => setGameState((values) => ({ ...values, isFlip: true }))}>\n        <div className=\"game-board__phrase\">\n          { lesson[gameState.step].rus }\n        </div>\n\n        <div className=\"game-board__phrase\">\n          { gameState.isFlip && lesson[gameState.step].en }\n        </div>\n\n        { gameState.isFlip && (\n          <div className=\"game-board__actions\">\n            <button className=\"game-board__action\" onClick={clickRightButtonHandler}>is right</button>\n            <button className=\"game-board__action\" onClick={clickWrongButtonHandler}>is wrong</button>\n          </div>\n        ) }\n\n      </div>\n\n      <div className=\"game-board__comment\">\n        {/* <pre> */}\n          {comment}\n        {/* </pre> */}\n      </div>\n    </section>\n  )\n}\n\nexport default GameBoard;\n","import * as React from \"react\"\nimport './main.scss';\n\nimport Controls from '../components/Controls/index';\nimport GameBoard from '../components/GameBoard/index';\n\nimport lessonsData from '../data/lessons.json';\nimport daysData from '../data/days.json';\n\nconst IndexPage = () => {\n  const [currentLesson, setCurrentLesson] = React.useState(null);\n  const [controls, setControls] = React.useState(null);\n\n  const handleControlsChange = (controls) => {\n    if (controls === null) {\n      setCurrentLesson(null);\n      return;\n    }\n\n    setControls(controls);\n\n    const { level, day, lesson, onlyFalse } = controls;\n\n    const falseIndexes = JSON.parse(localStorage.getItem(\n      `${controls.level}-${controls.day}-${controls.lesson}`,\n    ));\n\n    const currentLesson = onlyFalse === false || falseIndexes === null\n      ? lessonsData[level][day][lesson]\n      : lessonsData[level][day][lesson].filter(\n        (_, index) => falseIndexes.indexOf(index) === -1\n      );\n\n    setCurrentLesson(currentLesson);\n  }\n\n  const comment = controls !== null ? daysData[controls.level][controls.day][controls.lesson] : null;\n\n  return (\n    <main className=\"main\">\n      <title>English Patterns</title>\n\n      <Controls lessonsData={lessonsData} onControlsChange={handleControlsChange} />\n\n      { currentLesson !== null && <GameBoard comment={comment} controls={controls} lesson={currentLesson} /> }\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}